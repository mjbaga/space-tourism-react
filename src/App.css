/* ------------------- */
/* Custom properties   */
/* ------------------- */

:root {
  /* colors */
  --clr-dark: 230 35% 7%;
  --clr-light: 231 77% 90%;
  --clr-white: 0 0% 100%;
  
  /* font-sizes */
  --fs-900: clamp(5rem, 8vw + 1rem, 9.375rem);
  --fs-800: 3.5rem;
  --fs-700: 1.5rem;
  --fs-600: 1rem;
  --fs-500: 1.75rem;
  --fs-400: 0.9375rem;
  --fs-300: 1rem;
  --fs-200: 0.875rem;
  
  /* font-families */
  --ff-serif: "Bellefair", serif;
  --ff-sans-cond: "Barlow Condensed", sans-serif;
  --ff-sans-normal: "Barlow", sans-serif;
}

@media (min-width: 35em) {
  :root {
    --fs-800: 5rem;
    --fs-700: 2.5rem;
    --fs-600: 1.5rem;
    --fs-400: 1rem;
  }
}

@media (min-width: 45em) {
  :root {
    --fs-800: 6.25rem;
    --fs-700: 3.5rem;
    --fs-600: 2rem;
    --fs-400: 1.125rem;
  }
}

/* ------------------- */
/* Reset               */
/* ------------------- */

*,
*:before,
*:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
h5,
p {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5 {
    font-weight: 400;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  background: hsl(var(--clr-dark));
  color: hsl(var(--clr-white));
  display: grid;
  grid-template-rows: min-content 1fr;
  overflow-x: hidden;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* ------------------- */
/* Utility classes     */
/* ------------------- */

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
}

.container {
  position: relative;
  max-width: 1360px;
  margin-inline: auto;
  padding-inline: 20px;
  width: 100%;
}

.grid-container {
  display: grid;
  text-align: center;
  place-items: center;
  padding-inline: 1rem;
}

.grid-container * {
  max-width: 45ch;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

.skip-to-content {
  position: absolute;
  transform: translateY(-100%);
  z-index: 9999;
  background: hsl( var(--clr-white) );
  color: hsl( var(--clr-dark) );
  padding: .5em 1em;
  margin-inline: auto;
  transition: transform 500ms ease-in;
}

.skip-to-content:focus {
  transform: translateY(0);
}

/* Colors */
.bg-dark { background-color: hsl( var(--clr-dark) );}
.bg-accent { background-color: hsl( var(--clr-light) );}
.bg-white { background-color: hsl( var(--clr-white) );}

.text-dark { color: hsl( var(--clr-dark) );}
.text-accent { color: hsl( var(--clr-light) );}
.text-white { color: hsl( var(--clr-white) );}

#root {
  /* min-height: 100vh; */
}

.App {
  /* height: 100%; */
}

/* Typography */

.ff-serif { font-family: var(--ff-serif); } 
.ff-sans-cond { font-family: var(--ff-sans-cond); } 
.ff-sans-normal { font-family: var(--ff-sans-normal); } 

.letter-spacing-1 { letter-spacing: 4.75px; } 
.letter-spacing-2 { letter-spacing: 2.7px; } 
.letter-spacing-3 { letter-spacing: 2.35px; } 

.uppercase { text-transform: uppercase; }

.fs-900 { font-size: var(--fs-900); }
.fs-800 { font-size: var(--fs-800); }
.fs-700 { font-size: var(--fs-700); }
.fs-600 { font-size: var(--fs-600); }
.fs-500 { font-size: var(--fs-500); }
.fs-400 { font-size: var(--fs-400); }
.fs-300 { font-size: var(--fs-300); }
.fs-200 { font-size: var(--fs-200); }


.fs-900,
.fs-800,
.fs-700,
.fs-600 {
    line-height: 1.1;
}

.text-faded-white {
  color: hsl( var(--clr-white) / 0.25);
}

.d-block {
  display: block;
}

.mright-10 {
  margin-right: 10px;
}

.numbered-title {
  font-family: var(--ff-sans-cond);
  color: hsl( var(--clr-white) );
  text-transform: uppercase;
  font-size: var(--fs-500);
}

.numbered-title span {
  color: hsl( var(--clr-white) / 0.25);
  margin-right: 0.5em;
  font-weight: 700;
}

.large-button {
  padding: 5rem;
  width: 3rem;
  height: 3rem;
  border-radius: 999px;
}

.center {
  text-align: center;
}

/* Components */
/* Temporary: to transfer to components when needed */
.dot-indicators {
  margin: 1rem auto;
}

.dot-indicators > * {
  aspect-ratio: 1;
  border-radius: 50%;
  border: none;
  background:hsl( var(--clr-white) / 0.25);
  transition: background 500ms ease-in;
  cursor: pointer;
  padding: .5em;
}

.dot-indicators > *:hover {
  background:hsl( var(--clr-white) / 0.5);
}

.dot-indicators > *[aria-selected=true] {
  background:hsl( var(--clr-white));
}

.numeric-buttons {
  flex-flow: column;
  align-items: center;
}

.numeric-buttons > * {
  display: grid;
  place-items: center;
  aspect-ratio: 1 / 1;;
  border-radius: 50%;
  border: none;
  background: transparent;
  cursor: pointer;
  padding: 0.5em 1em;
  color: hsl( var(--clr-white));
  border: 1px solid hsl( var(--clr-white) / 0.5);
  transition: all 250ms linear;
  width: 80px;
}

.numeric-buttons > *:hover {
  border: 1px solid hsl( var(--clr-white));
}

.numeric-buttons > *[aria-selected=true] {
  background: hsl( var(--clr-white));
  color: hsl( var(--clr-dark));
  border: 1px solid hsl( var(--clr-white));
}

.interactive-buttons {
  /* flex-flow: column;
  flex-grow: 1;
  align-items: center; */
  /* display: flex; */
  display: grid;
  grid-template-columns: 1fr 1fr;
  margin: 3rem 0;
}

.interactive-buttons > * {
  display: grid;
  justify-content: center;
}

@media screen and (min-width: 768px) {
  .grid-container {
    text-align: left;
    display: grid;
    column-gap: var(--container-gap, 2rem);
    grid-template-columns: minmax(1rem, 1fr) repeat(2, minmax(0, 680px)) minmax(1rem, 1fr);
  }
  
  .grid-container > *:first-child {
    grid-column: 2;
  }
  
  .grid-container > *:last-child {
    grid-column: 3;
    place-items: center;
  }

  .grid-container--home {
    padding-bottom: max(6rem, 20vh);
    align-items: end;
  }
}